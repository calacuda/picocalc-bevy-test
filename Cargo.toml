[package]
name = "picocalc-bevy-test"
edition = "2021"
version = "0.1.0"

[dependencies]
cortex-m = "0.7"
cortex-m-rt = "0.7.5"
critical-section = "1.2.0"
defmt = { version = "0.3", features = ["encoding-rzcobs"] }
defmt-brtt = { version = "0.1", default-features = false, features = ["rtt"] }
libm = "0.2.15"
# panic-halt = "0.2.0"
panic-probe = { version = "0.3", features = ["print-defmt"] }
pio = "0.3.0"
pio-proc = "0.3.0"
# rp-hal = { version = "0.0.2", features = ["2040"] }
# rp-pico = "0.9.0"
# rp2040-boot2 = "0.3.0"
# rp2040-hal = { version = "0.10.2", features = ["critical-section-impl", "rt", "defmt"] }
rp235x-hal = { version = "0.3.0", features = ["binary-info", "critical-section-impl", "rt", "defmt"] }
# rtic = "2.1.1"
# TODO(4) Select the correct rtic backend
# rtic = { version = "2.1.3", features = [ "thumbv6-backend" ] }
# TODO(5) Add hal as dependency
# some-hal = "1.2.3"
# TODO add a monotonic if you use scheduling
# rtic-monotonics = { version = "1.0.0", features = [ "cortex-m-systick" ]}
fugit = "0.3.6"
heapless = "0.8.0"
rp-binary-info = "0.1.1"
panic-halt = "1.0.0"
# embedded-hal = { version = "0.2.3", features = ["unproven"] }
embedded-hal = { version = "1.0.0" }
embedded-alloc = "0.6.0"
embedded-graphics = { version = "0.8", features = ["defmt"] }
portable-atomic = { version = "1.9.0", features = ["critical-section"] }
bevy = { version = "0.16", default-features = false, features = [ "critical-section", "default_no_std" ] }
# bevy = { git = "https://github.com/bevyengine/bevy", rev = "0518eda", default-features = false, features = [ "critical-section", "default_no_std" ] }
defmt-rtt = "1.0.0"
# embedded-hal-bus = "0.2.0"
ili9486-driver = { path = "./ili9486-driver/" }
# ili9486-driver = { git = "https://github.com/chrismoos/ili9486-driver" }
tinytga = "0.5.0"
nalgebra = {version = "0.32.3", default-features = false, features = [ "libm" ] }

[dependencies.embedded-gfx]
git = "https://github.com/calacuda/embedded-gfx"

[dependencies.display-interface-spi]
git = "https://github.com/chrismoos/display-interface"
branch = "rw-interface"
# path = "./ili9486-driver/display-interface/spi/"

[target.'cfg( target_arch = "arm" )'.dependencies]
embassy-executor = {version = "0.5", features = ["arch-cortex-m", "executor-thread"]}

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = "s" # <-
overflow-checks = true # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = "s" # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = "s" # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = "s" # <-
overflow-checks = false # <-

# uncomment this to switch from the crates.io version of defmt to its git version
# check app-template's README for instructions
# [patch.crates-io]
# defmt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version supported by probe-rs (see changelog)" }
# defmt-rtt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version supported by probe-rs (see changelog)" }
# defmt-test = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version supported by probe-rs (see changelog)" }
# panic-probe = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version supported by probe-rs (see changelog)" }
